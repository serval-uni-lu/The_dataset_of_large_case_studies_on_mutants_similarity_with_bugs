diff --git a/src/test/java/org/jsoup/parser/CharacterReaderTest.java b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
index 8f32251..0a1176a 100644
--- a/src/test/java/org/jsoup/parser/CharacterReaderTest.java
+++ b/src/test/java/org/jsoup/parser/CharacterReaderTest.java
@@ -95,11 +95,6 @@ public class CharacterReaderTest {
         assertEquals(-1, r.nextIndexOf("Two"));
     }
 
-    @Test public void nextIndexOfUnmatched() {
-        CharacterReader r = new CharacterReader("<[[one]]");
-        assertEquals(-1, r.nextIndexOf("]]>"));
-    }
-
     @Test public void consumeToChar() {
         CharacterReader r = new CharacterReader("One Two Three");
         assertEquals("One ", r.consumeTo('T'));
diff --git a/src/test/java/org/jsoup/parser/HtmlParserTest.java b/src/test/java/org/jsoup/parser/HtmlParserTest.java
index 6aeaeac..c717433 100644
--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java
+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java
@@ -287,13 +287,6 @@ public class HtmlParserTest {
         assertEquals(1, div.childNodeSize()); // no elements, one text node
     }
 
-    @Test public void handlesUnclosedCdataAtEOF() {
-        // https://github.com/jhy/jsoup/issues/349 would crash, as character reader would try to seek past EOF
-        String h = "<![CDATA[]]";
-        Document doc = Jsoup.parse(h);
-        assertEquals(1, doc.body().childNodeSize());
-    }
-
     @Test public void handlesInvalidStartTags() {
         String h = "<div>Hello < There <&amp;></div>"; // parse to <div {#text=Hello < There <&>}>
         Document doc = Jsoup.parse(h);

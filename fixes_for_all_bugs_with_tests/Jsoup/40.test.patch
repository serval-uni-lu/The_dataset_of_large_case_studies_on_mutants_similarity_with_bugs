diff --git a/src/test/java/org/jsoup/nodes/DocumentTypeTest.java b/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
index 59a2702..f612251 100644
--- a/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
+++ b/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
@@ -10,8 +10,8 @@ import static org.junit.Assert.*;
  * @author Jonathan Hedley, http://jonathanhedley.com/
  */
 public class DocumentTypeTest {
-    @Test
-    public void constructorValidationOkWithBlankName() {
+    @Test(expected = IllegalArgumentException.class)
+    public void constructorValidationThrowsExceptionOnBlankName() {
         DocumentType fail = new DocumentType("","", "", "");
     }
 
diff --git a/src/test/java/org/jsoup/parser/HtmlParserTest.java b/src/test/java/org/jsoup/parser/HtmlParserTest.java
index e843773..dcfe4e0 100644
--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java
+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java
@@ -806,22 +806,4 @@ public class HtmlParserTest {
         Document doc = Jsoup.parse(h);
         assertEquals("<img>\n<svg>\n <image />\n</svg>", doc.body().html());
     }
-
-    @Test public void handlesInvalidDoctypes() {
-        // would previously throw invalid name exception on empty doctype
-        Document doc = Jsoup.parse("<!DOCTYPE>");
-        assertEquals(
-                "<!DOCTYPE> <html> <head></head> <body></body> </html>",
-                StringUtil.normaliseWhitespace(doc.outerHtml()));
-
-        doc = Jsoup.parse("<!DOCTYPE><html><p>Foo</p></html>");
-        assertEquals(
-                "<!DOCTYPE> <html> <head></head> <body> <p>Foo</p> </body> </html>",
-                StringUtil.normaliseWhitespace(doc.outerHtml()));
-
-        doc = Jsoup.parse("<!DOCTYPE \u0000>");
-        assertEquals(
-                "<!DOCTYPE ï¿½> <html> <head></head> <body></body> </html>",
-                StringUtil.normaliseWhitespace(doc.outerHtml()));
-    }
 }

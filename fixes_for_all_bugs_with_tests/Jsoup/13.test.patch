diff --git a/src/test/java/org/jsoup/nodes/NodeTest.java b/src/test/java/org/jsoup/nodes/NodeTest.java
index e44dd5e..24f818d 100644
--- a/src/test/java/org/jsoup/nodes/NodeTest.java
+++ b/src/test/java/org/jsoup/nodes/NodeTest.java
@@ -36,7 +36,7 @@ public class NodeTest {
         Element a = doc.select("a").first();
         assertEquals("/foo", a.attr("href"));
         assertEquals("http://jsoup.org/foo", a.attr("abs:href"));
-        assertTrue(a.hasAttr("abs:href"));
+        assertFalse(a.hasAttr("abs:href")); // only realised on the get method, not in has or iterator
     }
 
     @Test public void handlesAbsOnImage() {
@@ -46,29 +46,6 @@ public class NodeTest {
         assertEquals(img.absUrl("src"), img.attr("abs:src"));
     }
 
-    @Test public void handlesAbsPrefixOnHasAttr() {
-        // 1: no abs url; 2: has abs url
-        Document doc = Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org/'>Two</a>");
-        Element one = doc.select("#1").first();
-        Element two = doc.select("#2").first();
-
-        assertFalse(one.hasAttr("abs:href"));
-        assertTrue(one.hasAttr("href"));
-        assertEquals("", one.absUrl("href"));
-
-        assertTrue(two.hasAttr("abs:href"));
-        assertTrue(two.hasAttr("href"));
-        assertEquals("http://jsoup.org/", two.absUrl("href"));
-    }
-
-    @Test public void literalAbsPrefix() {
-        // if there is a literal attribute "abs:xxx", don't try and make absolute.
-        Document doc = Jsoup.parse("<a abs:href='odd'>One</a>");
-        Element el = doc.select("a").first();
-        assertTrue(el.hasAttr("abs:href"));
-        assertEquals("odd", el.attr("abs:href"));
-    }
-
     /*
     Test for an issue with Java's abs URL handler.
      */
diff --git a/src/test/java/org/jsoup/select/ElementsTest.java b/src/test/java/org/jsoup/select/ElementsTest.java
index 76923f4..c0af17a 100644
--- a/src/test/java/org/jsoup/select/ElementsTest.java
+++ b/src/test/java/org/jsoup/select/ElementsTest.java
@@ -45,16 +45,6 @@ public class ElementsTest {
         assertTrue(ps.hasAttr("class"));
         assertFalse(ps.hasAttr("style"));
     }
-
-    @Test public void hasAbsAttr() {
-        Document doc = Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>");
-        Elements one = doc.select("#1");
-        Elements two = doc.select("#2");
-        Elements both = doc.select("a");
-        assertFalse(one.hasAttr("abs:href"));
-        assertTrue(two.hasAttr("abs:href"));
-        assertTrue(both.hasAttr("abs:href")); // hits on #2
-    }
     
     @Test public void attr() {
         Document doc = Jsoup.parse("<p title=foo><p title=bar><p class=foo><p class=bar>");
@@ -62,17 +52,6 @@ public class ElementsTest {
         assertEquals("foo", classVal);
     }
 
-    @Test public void absAttr() {
-        Document doc = Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>");
-        Elements one = doc.select("#1");
-        Elements two = doc.select("#2");
-        Elements both = doc.select("a");
-
-        assertEquals("", one.attr("abs:href"));
-        assertEquals("http://jsoup.org", two.attr("abs:href"));
-        assertEquals("http://jsoup.org", both.attr("abs:href"));
-    }
-
     @Test public void classes() {
         Document doc = Jsoup.parse("<div><p class='mellow yellow'></p><p class='red green'></p>");
 

diff --git a/src/test/java/org/jsoup/integration/UrlConnectTest.java b/src/test/java/org/jsoup/integration/UrlConnectTest.java
index 836b82b..ba22391 100644
--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java
+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java
@@ -697,17 +697,4 @@ public class UrlConnectTest {
         assertTrue(doc2.title().contains("Environment"));
     }
 
-    @Test public void handlesSuperDeepPage() throws IOException {
-        // https://github.com/jhy/jsoup/issues/955
-
-        long start = System.currentTimeMillis();
-        String url = "http://sv.stargate.wikia.com/wiki/M2J";
-        Document doc = Jsoup.connect(url).get();
-        assertEquals("M2J | Sv.stargate Wiki | FANDOM powered by Wikia", doc.title());
-        assertEquals(110160, doc.select("dd").size());
-        // those are all <dl><dd> stacked in each other. wonder how that got generated?
-        assertTrue(System.currentTimeMillis() - start < 1000);
-
-    }
-
 }
diff --git a/src/test/java/org/jsoup/parser/HtmlParserTest.java b/src/test/java/org/jsoup/parser/HtmlParserTest.java
index afd2ee2..a2cb069 100644
--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java
+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java
@@ -901,29 +901,6 @@ public class HtmlParserTest {
         assertTrue(System.currentTimeMillis() - start < 1000);
     }
 
-    @Test public void handlesDeepStack() {
-        // inspired by http://sv.stargate.wikia.com/wiki/M2J and https://github.com/jhy/jsoup/issues/955
-        // I didn't put it in the integration tests, because explorer and intellij kept dieing trying to preview/index it
-
-        // Arrange
-        StringBuilder longBody = new StringBuilder(500000);
-        for (int i = 0; i < 25000; i++) {
-            longBody.append(i).append("<dl><dd>");
-        }
-        for (int i = 0; i < 25000; i++) {
-            longBody.append(i).append("</dd></dl>");
-        }
-
-        // Act
-        long start = System.currentTimeMillis();
-        Document doc = Parser.parseBodyFragment(longBody.toString(), "");
-
-        // Assert
-        assertEquals(2, doc.body().childNodeSize());
-        assertEquals(25000, doc.select("dd").size());
-        assertTrue(System.currentTimeMillis() - start < 1000);
-    }
-
     @Test
     public void testInvalidTableContents() throws IOException {
         File in = ParseTest.getFile("/htmltests/table-invalid-elements.html");

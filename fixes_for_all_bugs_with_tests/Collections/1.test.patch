diff --git a/src/test/org/apache/commons/collections/map/TestFlat3Map.java b/src/test/org/apache/commons/collections/map/TestFlat3Map.java
index 3f5d9776..43780307 100644
--- a/src/test/org/apache/commons/collections/map/TestFlat3Map.java
+++ b/src/test/org/apache/commons/collections/map/TestFlat3Map.java
@@ -19,7 +19,6 @@ import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
-import java.util.Iterator;
 import java.util.Map;
 
 import junit.framework.Test;
@@ -40,10 +39,8 @@ public class TestFlat3Map extends AbstractTestIterableMap {
 
     private static final Integer ONE = new Integer(1);
     private static final Integer TWO = new Integer(2);
-    private static final Integer THREE = new Integer(3);
     private static final String TEN = "10";
     private static final String TWENTY = "20";
-    private static final String THIRTY = "30";
         
     public TestFlat3Map(String testName) {
         super(testName);
@@ -210,123 +207,7 @@ public class TestFlat3Map extends AbstractTestIterableMap {
         assertEquals(ONE, ser.get(TEN));
         assertEquals(TWO, ser.get(TWENTY));
     }
-
-    //-----------------------------------------------------------------------
-    public void testEntryIteratorSetValue1() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        Iterator it = map.entrySet().iterator();
-        Map.Entry entry = (Map.Entry) it.next();
-        entry.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals("NewValue", map.get(ONE));
-        assertEquals(TWENTY, map.get(TWO));
-        assertEquals(THIRTY, map.get(THREE));
-    }
-
-    public void testEntryIteratorSetValue2() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        Iterator it = map.entrySet().iterator();
-        it.next();
-        Map.Entry entry = (Map.Entry) it.next();
-        entry.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals(TEN, map.get(ONE));
-        assertEquals("NewValue", map.get(TWO));
-        assertEquals(THIRTY, map.get(THREE));
-    }
-
-    public void testEntryIteratorSetValue3() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        Iterator it = map.entrySet().iterator();
-        it.next();
-        it.next();
-        Map.Entry entry = (Map.Entry) it.next();
-        entry.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals(TEN, map.get(ONE));
-        assertEquals(TWENTY, map.get(TWO));
-        assertEquals("NewValue", map.get(THREE));
-    }
-
-    //-----------------------------------------------------------------------
-    public void testMapIteratorSetValue1() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        MapIterator it = map.mapIterator();
-        it.next();
-        it.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals("NewValue", map.get(ONE));
-        assertEquals(TWENTY, map.get(TWO));
-        assertEquals(THIRTY, map.get(THREE));
-    }
-
-    public void testMapIteratorSetValue2() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        MapIterator it = map.mapIterator();
-        it.next();
-        it.next();
-        it.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals(TEN, map.get(ONE));
-        assertEquals("NewValue", map.get(TWO));
-        assertEquals(THIRTY, map.get(THREE));
-    }
-
-    public void testMapIteratorSetValue3() throws Exception {
-        Flat3Map map = new Flat3Map();
-        map.put(ONE, TEN);
-        map.put(TWO, TWENTY);
-        map.put(THREE, THIRTY);
-        
-        MapIterator it = map.mapIterator();
-        it.next();
-        it.next();
-        it.next();
-        it.setValue("NewValue");
-        assertEquals(3, map.size());
-        assertEquals(true, map.containsKey(ONE));
-        assertEquals(true, map.containsKey(TWO));
-        assertEquals(true, map.containsKey(THREE));
-        assertEquals(TEN, map.get(ONE));
-        assertEquals(TWENTY, map.get(TWO));
-        assertEquals("NewValue", map.get(THREE));
-    }
-
+    
     //-----------------------------------------------------------------------
     public BulkTest bulkTestMapIterator() {
         return new TestFlatMapIterator();

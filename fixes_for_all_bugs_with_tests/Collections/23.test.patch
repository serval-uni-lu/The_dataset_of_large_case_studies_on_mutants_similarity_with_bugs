diff --git a/src/test/java/org/apache/commons/collections4/TrieUtilsTest.java b/src/test/java/org/apache/commons/collections4/TrieUtilsTest.java
index 36badbef..c473fd0f 100644
--- a/src/test/java/org/apache/commons/collections4/TrieUtilsTest.java
+++ b/src/test/java/org/apache/commons/collections4/TrieUtilsTest.java
@@ -49,8 +49,6 @@ public class TrieUtilsTest extends BulkTest {
         } catch (final IllegalArgumentException ex) {
             // expected
         }
-        
-        assertSame("UnmodifiableTrie shall not be decorated", trie, TrieUtils.unmodifiableTrie(trie));
     }
 
 }
diff --git a/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrieTest.java b/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrieTest.java
index e4eb48be..28dd8630 100644
--- a/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrieTest.java
+++ b/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrieTest.java
@@ -16,12 +16,14 @@
  */
 package org.apache.commons.collections4.trie;
 
+import java.util.SortedMap;
+
 import junit.framework.Test;
 
 import org.apache.commons.collections4.BulkTest;
-import org.apache.commons.collections4.Trie;
 import org.apache.commons.collections4.Unmodifiable;
 import org.apache.commons.collections4.map.AbstractSortedMapTest;
+import org.apache.commons.collections4.map.UnmodifiableSortedMap;
 
 /**
  * Extension of {@link AbstractSortedMapTest} for exercising the
@@ -43,8 +45,8 @@ public class UnmodifiableTrieTest<V> extends AbstractSortedMapTest<String, V> {
     //-------------------------------------------------------------------
 
     @Override
-    public Trie<String, V> makeObject() {
-        return UnmodifiableTrie.unmodifiableTrie(new PatriciaTrie<V>());
+    public SortedMap<String, V> makeObject() {
+        return UnmodifiableSortedMap.unmodifiableSortedMap(new PatriciaTrie<V>());
     }
 
     @Override
@@ -63,31 +65,28 @@ public class UnmodifiableTrieTest<V> extends AbstractSortedMapTest<String, V> {
     }
 
     @Override
-    public Trie<String, V> makeFullMap() {
-        final Trie<String, V> m = new PatriciaTrie<V>();
+    public SortedMap<String, V> makeFullMap() {
+        final SortedMap<String, V> m = new PatriciaTrie<V>();
         addSampleMappings(m);
-        return UnmodifiableTrie.unmodifiableTrie(m);
+        return UnmodifiableSortedMap.unmodifiableSortedMap(m);
     }
 
     //-----------------------------------------------------------------------
-
     public void testUnmodifiable() {
         assertTrue(makeObject() instanceof Unmodifiable);
         assertTrue(makeFullMap() instanceof Unmodifiable);
     }
 
     public void testDecorateFactory() {
-        final Trie<String, V> trie = makeFullMap();
-        assertSame(trie, UnmodifiableTrie.unmodifiableTrie(trie));
+        final SortedMap<String, V> map = makeFullMap();
+        assertSame(map, UnmodifiableSortedMap.unmodifiableSortedMap(map));
 
         try {
-            UnmodifiableTrie.unmodifiableTrie(null);
+            UnmodifiableSortedMap.unmodifiableSortedMap(null);
             fail();
         } catch (final IllegalArgumentException ex) {}
     }
 
-    //-----------------------------------------------------------------------
-
     @Override
     public String getCompatibilityVersion() {
         return "4";

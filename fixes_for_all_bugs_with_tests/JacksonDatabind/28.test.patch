diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java b/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java
index 6229f2c11..6ea4b9589 100644
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java
@@ -47,19 +47,7 @@ public class TestObjectNode
             node = n;
         }
     }
-
-    // [databind#941]
-    static class MyValue
-    {
-        private final ObjectNode object;
-
-        @JsonCreator
-        public MyValue(ObjectNode object) { this.object = object; }
-
-        @JsonValue
-        public ObjectNode getObject() { return object; }
-    }
-
+    
     /*
     /**********************************************************
     /* Test methods
@@ -397,18 +385,4 @@ public class TestObjectNode
         w = new ObNodeWrapper(MAPPER.createObjectNode());
         assertEquals("{}", MAPPER.writeValueAsString(w));
     }
-
-    public void testIssue941() throws Exception
-    {
-        ObjectNode object = MAPPER.createObjectNode();
-
-        String json = MAPPER.writeValueAsString(object);
-        System.out.println("json: "+json);
-
-        ObjectNode de1 = MAPPER.readValue(json, ObjectNode.class);  // this works
-        System.out.println("Deserialized to ObjectNode: "+de1);
-
-        MyValue de2 = MAPPER.readValue(json, MyValue.class);  // but this throws exception
-        System.out.println("Deserialized to MyValue: "+de2);
-    }
 }

diff --git a/src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java b/src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
similarity index 92%
rename from src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java
rename to src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
index 78d54bcc9..b241e7374 100644
--- a/src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java
+++ b/src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
@@ -1,9 +1,9 @@
-package com.fasterxml.jackson.databind.deser;
+package com.fasterxml.jackson.failing;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.databind.*;
 
-public class ReadOrWriteOnlyTest extends BaseMapTest
+public class ReadWriteOnlyProp935Test extends BaseMapTest
 {
     // for [databind#935], verify read/write-only cases
     static class ReadXWriteY {
@@ -56,7 +56,7 @@ public class ReadOrWriteOnlyTest extends BaseMapTest
      */
 
     private final ObjectMapper MAPPER = new ObjectMapper();
-
+    
     // [databind#935]
     public void testReadOnlyAndWriteOnly() throws Exception
     {
@@ -69,7 +69,7 @@ public class ReadOrWriteOnlyTest extends BaseMapTest
         assertEquals(6, result.y);
     }
 
-    public void testReadOnly935() throws Exception
+    public void testReadOnl935() throws Exception
     {
         String json = MAPPER.writeValueAsString(new Pojo935());
         Pojo935 result = MAPPER.readValue(json, Pojo935.class);

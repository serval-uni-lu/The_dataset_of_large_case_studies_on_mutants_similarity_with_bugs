diff --git a/src/test/java/com/fasterxml/jackson/databind/filter/JsonIncludeTest.java b/src/test/java/com/fasterxml/jackson/databind/filter/JsonIncludeTest.java
index a5aa82e6b..2e51cfd46 100644
--- a/src/test/java/com/fasterxml/jackson/databind/filter/JsonIncludeTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/filter/JsonIncludeTest.java
@@ -3,9 +3,7 @@ package com.fasterxml.jackson.databind.filter;
 import java.io.IOException;
 import java.util.*;
 
-import com.fasterxml.jackson.annotation.JsonCreator;
 import com.fasterxml.jackson.annotation.JsonInclude;
-import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.annotation.JsonPropertyOrder;
 import com.fasterxml.jackson.databind.*;
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
@@ -129,51 +127,6 @@ public class JsonIncludeTest
         public Map<String,String> map = Collections.emptyMap();
     }
 
-    // [databind#1351]
-
-    static class Issue1351Bean
-    {
-        public final String first;
-        public final double second;
-
-        public Issue1351Bean(String first, double second) {
-            this.first = first;
-            this.second = second;
-        }
-    }
-
-    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
-    static abstract class Issue1351NonBeanParent
-    {
-        protected final int num;
-
-        protected Issue1351NonBeanParent(int num) {
-            this.num = num;
-        }
-
-        @JsonProperty("num")
-        public int getNum() {
-            return num;
-        }
-    }
-
-    static class Issue1351NonBean extends Issue1351NonBeanParent {
-        private String str;
-
-        @JsonCreator
-        public Issue1351NonBean(@JsonProperty("num") int num) {
-            super(num);
-        }
-
-        public String getStr() {
-            return str;
-        }
-
-        public void setStr(String str) {
-            this.str = str;
-        }
-    }
-
     /*
     /**********************************************************
     /* Unit tests
@@ -309,15 +262,22 @@ public class JsonIncludeTest
                 mapper.writeValueAsString(empty));
     }
 
-    // [databind#1351], [databind#1417]
+    static class Issue1351Bean
+    {
+        public final String first;
+        public final double second;
+
+        public Issue1351Bean(String first, double second) {
+            this.first = first;
+            this.second = second;
+        }
+    }
+    
     public void testIssue1351() throws Exception
     {
         ObjectMapper mapper = new ObjectMapper();
         mapper.setSerializationInclusion(JsonInclude.Include.NON_DEFAULT);
         assertEquals(aposToQuotes("{}"),
                 mapper.writeValueAsString(new Issue1351Bean(null, (double) 0)));
-        // [databind#1417]
-        assertEquals(aposToQuotes("{}"),
-                mapper.writeValueAsString(new Issue1351NonBean(0)));
     }
 }

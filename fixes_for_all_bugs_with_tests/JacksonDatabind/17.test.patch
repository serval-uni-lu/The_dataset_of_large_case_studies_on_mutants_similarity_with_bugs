diff --git a/src/test/java/com/fasterxml/jackson/databind/node/TestJsonNode.java b/src/test/java/com/fasterxml/jackson/databind/node/TestJsonNode.java
index 8dc121fa4..812f37f4d 100644
--- a/src/test/java/com/fasterxml/jackson/databind/node/TestJsonNode.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestJsonNode.java
@@ -85,6 +85,8 @@ public class TestJsonNode extends NodeTestBase
         assertEquals("\"Aw==\"", n.toString());
 
         assertEquals("AAMD", new BinaryNode(data).asText());
+
+        // 1.6:
         assertNodeNumbersForNonNumeric(n);
     }
 
@@ -99,25 +101,10 @@ public class TestJsonNode extends NodeTestBase
 
         assertEquals(new POJONode(null), new POJONode(null));
 
+        // 1.6:
         // default; non-numeric
         assertNodeNumbersForNonNumeric(n);
         // but if wrapping actual number, use it
         assertNodeNumbers(new POJONode(Integer.valueOf(123)), 123, 123.0);
     }
-
-    // [databind#793]
-    public void testArrayWithDefaultTyping() throws Exception
-    {
-        ObjectMapper mapper = new ObjectMapper()
-            .enableDefaultTyping();
-
-        JsonNode array = mapper.readTree("[ 1, 2 ]");
-        assertTrue(array.isArray());
-        assertEquals(2, array.size());
-
-        JsonNode obj = mapper.readTree("{ \"a\" : 2 }");
-        assertTrue(obj.isObject());
-        assertEquals(1, obj.size());
-        assertEquals(2, obj.path("a").asInt());
-    }
 }

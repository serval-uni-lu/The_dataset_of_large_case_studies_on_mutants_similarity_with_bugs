diff --git a/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java b/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java
index cc9998fe1..1b855daa7 100644
--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java
+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java
@@ -1,17 +1,12 @@
 package com.fasterxml.jackson.databind.ser;
 
-import java.io.IOException;
 import java.util.*;
 
 import com.fasterxml.jackson.annotation.*;
-import com.fasterxml.jackson.core.JsonGenerationException;
-import com.fasterxml.jackson.core.JsonGenerator;
+
 import com.fasterxml.jackson.databind.BaseMapTest;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.databind.SerializationFeature;
-import com.fasterxml.jackson.databind.SerializerProvider;
-import com.fasterxml.jackson.databind.annotation.JsonSerialize;
-import com.fasterxml.jackson.databind.ser.std.StdSerializer;
 
 public class TestAnyGetter extends BaseMapTest
 {
@@ -51,43 +46,7 @@ public class TestAnyGetter extends BaseMapTest
             stuff.put(key, value);
         }
     }
-
-    static class Issue705Bean
-    {
-        protected Map<String,String> stuff;
-
-        public Issue705Bean(String key, String value) {
-            stuff = new LinkedHashMap<String,String>();
-            stuff.put(key, value);
-        }
-        
-        @JsonSerialize(using = Issue705Serializer.class)
-//    @JsonSerialize(converter = MyConverter.class)
-        @JsonAnyGetter
-        public Map<String, String> getParameters(){
-            return stuff;
-        }
-    }
-
-    @SuppressWarnings("serial")
-    static class Issue705Serializer extends StdSerializer<Object>
-    {
-        public Issue705Serializer() {
-            super(Map.class, false);
-        }
-
-        @Override
-        public void serialize(Object value, JsonGenerator jgen,
-                SerializerProvider provider) throws IOException
-        {
-            StringBuilder sb = new StringBuilder();
-            for (Map.Entry<?,?> entry : ((Map<?,?>) value).entrySet()) {
-                sb.append('[').append(entry.getKey()).append('/').append(entry.getValue()).append(']');
-            }
-            jgen.writeStringField("stuff", sb.toString());
-        }
-    }
-
+    
     /*
     /**********************************************************
     /* Test cases
@@ -131,11 +90,4 @@ public class TestAnyGetter extends BaseMapTest
         assertEquals(aposToQuotes("{'bar':null}"),
                 MAPPER.writeValueAsString(input));
     }
-
-    public void testIssue705() throws Exception
-    {
-        Issue705Bean input = new Issue705Bean("key", "value");        
-        String json = MAPPER.writeValueAsString(input);
-        assertEquals("{\"stuff\":\"[key/value]\"}", json);
-    }
 }

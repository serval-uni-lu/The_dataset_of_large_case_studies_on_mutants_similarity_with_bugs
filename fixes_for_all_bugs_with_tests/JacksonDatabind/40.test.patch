diff --git a/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java b/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java
index 80150a2d2..8fe48cf9b 100644
--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java
+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java
@@ -259,30 +259,6 @@ public class TestSimpleTypes
         assertEquals(9, result._v);
     }
 
-    public void testEmptyToNullCoercionForPrimitives() throws Exception {
-        _testEmptyToNullCoercion(int.class, Integer.valueOf(0));
-        _testEmptyToNullCoercion(long.class, Long.valueOf(0));
-        _testEmptyToNullCoercion(double.class, Double.valueOf(0.0));
-        _testEmptyToNullCoercion(float.class, Float.valueOf(0.0f));
-    }
-
-    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws Exception
-    {
-        final String EMPTY = "\"\"";
-
-        // as per [databind#1095] should only allow coercion from empty String,
-        // if `null` is acceptable
-        ObjectReader intR = MAPPER.readerFor(primType);
-        assertEquals(emptyValue, intR.readValue(EMPTY));
-        try {
-            intR.with(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)
-                .readValue("\"\"");
-            fail("Should not have passed");
-        } catch (JsonMappingException e) {
-            verifyException(e, "Can not map Empty String");
-        }
-    }
-    
     /*
     /**********************************************************
     /* Then tests for wrappers
@@ -348,14 +324,14 @@ public class TestSimpleTypes
         assertNull(wrapper.getV());
         
         final ObjectMapper mapper = new ObjectMapper();
-        mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);
         try {
+            mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);
             mapper.readValue("{\"v\":null}", CharacterBean.class);
             fail("Attempting to deserialize a 'null' JSON reference into a 'char' property did not throw an exception");
         } catch (JsonMappingException exp) {
             //Exception thrown as required
         }
-
+        
         mapper.disable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);  
         final CharacterBean charBean = MAPPER.readValue(new StringReader("{\"v\":null}"), CharacterBean.class);
         assertNotNull(wrapper);
